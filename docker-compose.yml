version: '3.3'

services:
  db:
    image: postgres
    restart: always
    volumes:
      - "postgres:/var/lib/postgresql/data"
      - "./db/setup.sh:/docker-entrypoint-initdb.d/setup.sh"
      - "./db/migrate.sh:/usr/src/db/migrate.sh"
      - "./db/migrations:/usr/src/db/migrations"
    env_file:
      - .env
    environment:
      POSTGRES_USER: "${PG_USER}"
      POSTGRES_PASSWORD: "${PG_PASSWORD}"
      CLIMATE_PASSWORD: "${CLIMATE_PASSWORD}"
      ELECTRICITY_GRID_PASSWORD: "${ELECTRICITY_GRID_PASSWORD}"
    networks:
      - backend

  adminer:
    image: adminer
    depends_on:
      - db
    restart: always
    ports:
      - "8080:8080"
    networks:
      - backend

  simulator:
    build: simulator/.
    depends_on:
      - db
    restart: always
    volumes:
      - "./simulator:/usr/src/simulator"
      - "/usr/src/simulator/node_modules/"
    environment:
      PG_USER: "${PG_USER}"
      PG_PASSWORD: "${PG_PASSWORD}"
      CLIMATE_PASSWORD: "${CLIMATE_PASSWORD}"
      ELECTRICITY_GRID_PASSWORD: "${ELECTRICITY_GRID_PASSWORD}"
      WS_PRIVATE_KEY: "${WS_PRIVATE_KEY}"
    ports:
      - "3000:3000"
      - "8000:8000"
    networks:
      - backend

  web:
    build: web-server/.
    depends_on:
      - db
    restart: always
    volumes:
      - "./web-server:/usr/src/web"
      - "/usr/src/web/node_modules/"
    environment:
      PG_USER: "${PG_USER}"
      PG_PASSWORD: "${PG_PASSWORD}"
      ELECTRICITY_GRID_PASSWORD: "${ELECTRICITY_GRID_PASSWORD}"
      WS_PRIVATE_KEY: "${WS_PRIVATE_KEY}"
      WS_SESSION_SECRET: "${WS_SESSION_SECRET}"
      WEB_SERVER_PORT: "80"
    ports:
      - "80:80"
    networks:
      - backend

volumes:
  postgres:

networks:
  backend:
    driver: bridge
